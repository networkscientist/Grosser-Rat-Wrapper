[project]
name = "grosserratwrapper"

dynamic = [
    "classifiers",
    "version", # set version dynamically with poetry build --local-version
]
description = "Python Wrapper to interact with the public API if the Basel-Stadt parliament, the Grosser Rat"
license = { text = " CC BY-NC-SA 4.0"}
readme = "README.md"
authors = [
    { name = "Peter Zweifel", email = "71866336+networkscientist@users.noreply.github.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Natural Language :: German",
    "Programming Language :: Python :: 3.10"
]
keywords = [
    "Wrapper",
    "API",
    "Basel",
]
dependencies = [
    "requests>=2.32.3",
    "pandas>=2.2.2",
    "lxml>=5.2.2",
    "bs4>=0.0.2",
    "aiohttp>=3.10.1",
    "matplotlib>=3.9.1.post1",
    "pdfrw>=0.4",
    "sqlalchemy>=2.0.37",
    "pyyaml>=6.0.2",
    "ruff>=0.9.7",
    "html5lib>=1.1",
    "pypdf>=5.4.0",
]

[project.urls]
repository = "https://github.com/networkscientist/Grosser-Rat-Wrapper"

[tool.poetry]
version = "0.0.1.alpha1" # base version


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"  # Adjust to your Python version

[tool.ruff.lint]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "numpy"  # Accepts: "google", "numpy", or "pep257".
