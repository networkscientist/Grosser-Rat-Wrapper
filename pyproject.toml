[project]
name = "grosserratwrapper"
description = "Python Wrapper to interact with the public API if the Basel-Stadt parliament, the Grosser Rat"
authors = [{ name = "Peter Zweifel", email = "71866336+networkscientist@users.noreply.github.com" }]
requires-python = ">= 3.9"
readme = "README.md"
license = { text = " CC BY-NC-SA 4.0" }
keywords = [
    "Wrapper",
    "API",
    "Basel",
]

dependencies = [
    "requests>=2.32.3",
    "pandas>=2.2.2",
    "lxml>=5.2.2",
    "bs4>=0.0.2",
    "aiohttp>=3.10.1",
    "sqlalchemy>=2.0.37",
    "html5lib>=1.1",
    "pypdf>=5.4.0",
]

[dependency-groups]
dev = [
    "myst-parser>=3.0.1",
    "pytest>=8.3.5",
    "ruff>=0.11.7",
    "sphinx>=7.4.7",
    "sphinx-rtd-theme>=3.0.2",
]

dynamic = [
    "classifiers",
    "version",
]

[project.urls]
repository = "https://github.com/networkscientist/Grosser-Rat-Wrapper"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
only_include = ["src"]

[tool.hatch.version]
path = "src/grosserratwrapper/__about__.py"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"  # Adjust to your Python version

[tool.ruff.lint]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["B", "E4", "E7", "E9", "F", "I", "SIM", "PL"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "numpy"  # Accepts: "google", "numpy", or "pep257".
